import{_ as n,C as r,c as p,o as d,aA as o,j as s,G as a,a as t,w as l}from"./chunks/framework.COI-rPE_.js";const M=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"TimeseriesTools/types.md","filePath":"TimeseriesTools/types.md","lastUpdated":null}'),T={name:"TimeseriesTools/types.md"},m={class:"jldocstring custom-block",open:""},u={class:"jldocstring custom-block",open:""},h={class:"jldocstring custom-block",open:""},c={class:"jldocstring custom-block",open:""},g={class:"jldocstring custom-block",open:""},b={class:"jldocstring custom-block",open:""},y={class:"jldocstring custom-block",open:""},k={class:"jldocstring custom-block",open:""},f={class:"jldocstring custom-block",open:""},j={class:"jldocstring custom-block",open:""},v={class:"jldocstring custom-block",open:""},_={class:"jldocstring custom-block",open:""},E={class:"jldocstring custom-block",open:""},A={class:"jldocstring custom-block",open:""},D={class:"jldocstring custom-block",open:""},x={class:"jldocstring custom-block",open:""},S={class:"jldocstring custom-block",open:""},C={class:"jldocstring custom-block",open:""},I={class:"jldocstring custom-block",open:""},V={class:"jldocstring custom-block",open:""},P={class:"jldocstring custom-block",open:""};function L(F,e,R,N,w,B){const i=r("Badge");return d(),p("div",null,[e[84]||(e[84]=o(`<p>The <code>TimeseriesTools</code> package provides a standardized collection of types designed for handling various types of time-series data. Defining consistent types for time series provides three key benefits:</p><ol><li><p>It simplifies the workspace and method signatures by aggregating much of the data that defines a time series into a single variable; thanks to the <a href="https://github.com/rafaqz/DimensionalData.jl" target="_blank" rel="noreferrer"><code>DimensionalData.jl</code></a> package, one variable can hold the values of a time series, its time points, spatial coordinates, units, metadata, and more.</p></li><li><p>It facilitates generic functions that dispatch on the various types of time series; for instance, more efficient algorithms can be written for <a href="/TimeseriesTools.jl/dev/TimeseriesTools/types#TimeseriesTools.RegularTimeSeries"><code>RegularTimeSeries</code></a> types than for <a href="/TimeseriesTools.jl/dev/TimeseriesTools/types#TimeseriesTools.IrregularTimeSeries"><code>IrregularTimeSeries</code></a> types, but the same high-level functionality can be provided by the same generic function that dispatches these methods given the type of the input time series.</p></li><li><p>Most importantly, this intuitively aligns the structure of time-series data in code to mathematical conventions, simplifying the process of developing and interpreting programs. Many small complexities (Was this time series regularly sampled? What are the output frequencies of my Fourier transform? The units of my power spectrum?) are handled automatically, leaving room to focus on higher-level problems.</p></li></ol><p>To achieve this, TimeseriesTools.jl defines a custom version of the <code>DimensionalData.DimArray</code> and custom <code>DimensionalData.Dimension</code>s:</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">x </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Timeseries</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">rand</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">x </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">isa</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> AbstractToolsArray </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># In most cases, an AbstractToolsArray behaves like a DimArray; see DimensionalData</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">x </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">isa</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> AbstractTimeSeries </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># An AbstractTimeSeries is an AbstractToolsArray...</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">lookup</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(x, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">isa</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 洧노 </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># ...where the first dimension is a custom TimeDim 洧노</span></span></code></pre></div><p>If a <code>ToolsArray</code> or <code>DimArray</code> has a <code>洧노</code> as its first dimension, it will be rebuilt as a <code>ToolsArray</code> (i.e. when using functions like <code>eachcol</code>). There are a small number of other custom dimensions, all exported, that share this property and are subtypes of <code>ToolsDimension</code>: e.g. <code>洧논</code>, <code>洧녽</code>, <code>洧녾</code>, <code>洧녭</code>,<code>Var</code>, <code>Obs</code>. To define more of these <code>ToolsDimension</code>s, use:</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">DimensionalData</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">@dim</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> NewDim ToolsDim </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;NameOfNewDim&quot;</span></span></code></pre></div><p>Please note that functions operating on a <code>ToolsArray</code> without a <code>ToolsDimension</code> as the first or last dimension may NOT return a <code>ToolsArray</code>, especially if they perform slicing and rebuilding. Be careful using the <code>DimensionalData.Dim{:name}</code> syntax.</p><p>Below is a full list of types defined in this package.</p>`,8)),s("details",m,[s("summary",null,[e[0]||(e[0]=s("a",{id:"TimeseriesTools.ToolsDimension",href:"#TimeseriesTools.ToolsDimension"},[s("span",{class:"jlbinding"},"TimeseriesTools.ToolsDimension")],-1)),e[1]||(e[1]=t()),a(i,{type:"info",class:"jlObjectType jlType",text:"Type"})]),e[3]||(e[3]=o('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ToolsDimension</span></span></code></pre></div><p>A union of all <code>Dimension</code> types that fall within the scope of <code>TimeseriesTools</code>. Analogous to <code>DimensionalData.Dimension</code> for dispatch purposes.</p><p><strong>See also</strong></p><ul><li><p><a href="/TimeseriesTools.jl/dev/TimeseriesTools/types#TimeseriesTools.ToolsDim"><code>ToolsDim</code></a></p></li><li><p><a href="/TimeseriesTools.jl/dev/TimeseriesTools/types#TimeseriesTools.TDim"><code>TDim</code></a></p></li></ul>',4)),a(i,{type:"info",class:"source-link",text:"source"},{default:l(()=>[...e[2]||(e[2]=[s("a",{href:"https://github.com/brendanjohnharris/TimeseriesTools.jl/blob/c37b9039661ee9978e8d75e75d7890021ba7f00a/src/Types.jl#L87-L95",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),s("details",u,[s("summary",null,[e[4]||(e[4]=s("a",{id:"TimeseriesTools.AbstractTimeSeries",href:"#TimeseriesTools.AbstractTimeSeries"},[s("span",{class:"jlbinding"},"TimeseriesTools.AbstractTimeSeries")],-1)),e[5]||(e[5]=t()),a(i,{type:"info",class:"jlObjectType jlType",text:"Type"})]),e[7]||(e[7]=o('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">AbstractTimeSeries{T, N, B}</span></span></code></pre></div><p>A type alias for an <a href="https://rafaqz.github.io/DimensionalData.jl/stable/api/#DimensionalData.AbstractDimArray" target="_blank" rel="noreferrer">AbstractDimArray</a> with a time index.</p>',2)),a(i,{type:"info",class:"source-link",text:"source"},{default:l(()=>[...e[6]||(e[6]=[s("a",{href:"https://github.com/brendanjohnharris/TimeseriesTools.jl/blob/c37b9039661ee9978e8d75e75d7890021ba7f00a/src/Types.jl#L148-L152",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),s("details",h,[s("summary",null,[e[8]||(e[8]=s("a",{id:"TimeseriesTools.AbstractToolsArray",href:"#TimeseriesTools.AbstractToolsArray"},[s("span",{class:"jlbinding"},"TimeseriesTools.AbstractToolsArray")],-1)),e[9]||(e[9]=t()),a(i,{type:"info",class:"jlObjectType jlType",text:"Type"})]),e[11]||(e[11]=s("p",null,"A local type to avoid overloading and piracy issues with DimensionalData.jl",-1)),a(i,{type:"info",class:"source-link",text:"source"},{default:l(()=>[...e[10]||(e[10]=[s("a",{href:"https://github.com/brendanjohnharris/TimeseriesTools.jl/blob/c37b9039661ee9978e8d75e75d7890021ba7f00a/src/Types.jl#L20-L22",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),s("details",c,[s("summary",null,[e[12]||(e[12]=s("a",{id:"TimeseriesTools.BinaryTimeSeries",href:"#TimeseriesTools.BinaryTimeSeries"},[s("span",{class:"jlbinding"},"TimeseriesTools.BinaryTimeSeries")],-1)),e[13]||(e[13]=t()),a(i,{type:"info",class:"jlObjectType jlType",text:"Type"})]),e[15]||(e[15]=o('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">BinaryTimeSeries</span></span></code></pre></div><p>A type alias for a time series of bits.</p>',2)),a(i,{type:"info",class:"source-link",text:"source"},{default:l(()=>[...e[14]||(e[14]=[s("a",{href:"https://github.com/brendanjohnharris/TimeseriesTools.jl/blob/c37b9039661ee9978e8d75e75d7890021ba7f00a/src/Types.jl#L243-L247",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),s("details",g,[s("summary",null,[e[16]||(e[16]=s("a",{id:"TimeseriesTools.IrregularIndex",href:"#TimeseriesTools.IrregularIndex"},[s("span",{class:"jlbinding"},"TimeseriesTools.IrregularIndex")],-1)),e[17]||(e[17]=t()),a(i,{type:"info",class:"jlObjectType jlType",text:"Type"})]),e[19]||(e[19]=o('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">IrregularIndex</span></span></code></pre></div><p>A type alias for an irregularly sampled dimension, wrapping an <code>AbstractVector</code>.</p>',2)),a(i,{type:"info",class:"source-link",text:"source"},{default:l(()=>[...e[18]||(e[18]=[s("a",{href:"https://github.com/brendanjohnharris/TimeseriesTools.jl/blob/c37b9039661ee9978e8d75e75d7890021ba7f00a/src/Types.jl#L215-L219",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),s("details",b,[s("summary",null,[e[20]||(e[20]=s("a",{id:"TimeseriesTools.IrregularTimeIndex",href:"#TimeseriesTools.IrregularTimeIndex"},[s("span",{class:"jlbinding"},"TimeseriesTools.IrregularTimeIndex")],-1)),e[21]||(e[21]=t()),a(i,{type:"info",class:"jlObjectType jlType",text:"Type"})]),e[23]||(e[23]=o('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">IrregularTimeIndex</span></span></code></pre></div><p>A type alias for a tuple of dimensions containing a <a href="/TimeseriesTools.jl/dev/TimeseriesTools/types#TimeseriesTools.TimeIndex"><code>TimeIndex</code></a> and any number of other dimensions.</p>',2)),a(i,{type:"info",class:"source-link",text:"source"},{default:l(()=>[...e[22]||(e[22]=[s("a",{href:"https://github.com/brendanjohnharris/TimeseriesTools.jl/blob/c37b9039661ee9978e8d75e75d7890021ba7f00a/src/Types.jl#L226-L230",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),s("details",y,[s("summary",null,[e[24]||(e[24]=s("a",{id:"TimeseriesTools.IrregularTimeSeries",href:"#TimeseriesTools.IrregularTimeSeries"},[s("span",{class:"jlbinding"},"TimeseriesTools.IrregularTimeSeries")],-1)),e[25]||(e[25]=t()),a(i,{type:"info",class:"jlObjectType jlType",text:"Type"})]),e[27]||(e[27]=o('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">IrregularTimeSeries</span></span></code></pre></div><p>A type alias for a potentially irregularly sampled time series.</p>',2)),a(i,{type:"info",class:"source-link",text:"source"},{default:l(()=>[...e[26]||(e[26]=[s("a",{href:"https://github.com/brendanjohnharris/TimeseriesTools.jl/blob/c37b9039661ee9978e8d75e75d7890021ba7f00a/src/Types.jl#L235-L239",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),s("details",k,[s("summary",null,[e[28]||(e[28]=s("a",{id:"TimeseriesTools.MultidimensionalTimeSeries",href:"#TimeseriesTools.MultidimensionalTimeSeries"},[s("span",{class:"jlbinding"},"TimeseriesTools.MultidimensionalTimeSeries")],-1)),e[29]||(e[29]=t()),a(i,{type:"info",class:"jlObjectType jlType",text:"Type"})]),e[31]||(e[31]=s("p",null,"A multidimensional time series has a regular sampling over a dimension other than time; a one-dimensional time series can be thought of as a field over an even grid in 1 dimension that fluctuates over time.",-1)),a(i,{type:"info",class:"source-link",text:"source"},{default:l(()=>[...e[30]||(e[30]=[s("a",{href:"https://github.com/brendanjohnharris/TimeseriesTools.jl/blob/c37b9039661ee9978e8d75e75d7890021ba7f00a/src/Types.jl#L208-L210",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),s("details",f,[s("summary",null,[e[32]||(e[32]=s("a",{id:"TimeseriesTools.MultivariateTimeSeries",href:"#TimeseriesTools.MultivariateTimeSeries"},[s("span",{class:"jlbinding"},"TimeseriesTools.MultivariateTimeSeries")],-1)),e[33]||(e[33]=t()),a(i,{type:"info",class:"jlObjectType jlType",text:"Type"})]),e[35]||(e[35]=o('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">MultivariateTimeSeries{T}</span></span></code></pre></div><p>A type alias for a multivariate time series (A matrix, with a first <code>Ti</code> dimension and an arbitrary second dimension).</p>',2)),a(i,{type:"info",class:"source-link",text:"source"},{default:l(()=>[...e[34]||(e[34]=[s("a",{href:"https://github.com/brendanjohnharris/TimeseriesTools.jl/blob/c37b9039661ee9978e8d75e75d7890021ba7f00a/src/Types.jl#L163-L167",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),s("details",j,[s("summary",null,[e[36]||(e[36]=s("a",{id:"TimeseriesTools.RegularIndex",href:"#TimeseriesTools.RegularIndex"},[s("span",{class:"jlbinding"},"TimeseriesTools.RegularIndex")],-1)),e[37]||(e[37]=t()),a(i,{type:"info",class:"jlObjectType jlType",text:"Type"})]),e[39]||(e[39]=o('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">RegularIndex</span></span></code></pre></div><p>A type alias for a regularly sampled dimension, wrapping an <code>AbstractRange</code>.</p>',2)),a(i,{type:"info",class:"source-link",text:"source"},{default:l(()=>[...e[38]||(e[38]=[s("a",{href:"https://github.com/brendanjohnharris/TimeseriesTools.jl/blob/c37b9039661ee9978e8d75e75d7890021ba7f00a/src/Types.jl#L177-L181",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),s("details",v,[s("summary",null,[e[40]||(e[40]=s("a",{id:"TimeseriesTools.RegularTimeIndex",href:"#TimeseriesTools.RegularTimeIndex"},[s("span",{class:"jlbinding"},"TimeseriesTools.RegularTimeIndex")],-1)),e[41]||(e[41]=t()),a(i,{type:"info",class:"jlObjectType jlType",text:"Type"})]),e[43]||(e[43]=o('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">RegularTimeIndex</span></span></code></pre></div><p>A type alias for a tuple of dimensions containing a <a href="/TimeseriesTools.jl/dev/TimeseriesTools/types#TimeseriesTools.TimeIndex"><code>TimeIndex</code></a> and any number of other dimensions.</p>',2)),a(i,{type:"info",class:"source-link",text:"source"},{default:l(()=>[...e[42]||(e[42]=[s("a",{href:"https://github.com/brendanjohnharris/TimeseriesTools.jl/blob/c37b9039661ee9978e8d75e75d7890021ba7f00a/src/Types.jl#L184-L188",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),s("details",_,[s("summary",null,[e[44]||(e[44]=s("a",{id:"TimeseriesTools.RegularTimeSeries",href:"#TimeseriesTools.RegularTimeSeries"},[s("span",{class:"jlbinding"},"TimeseriesTools.RegularTimeSeries")],-1)),e[45]||(e[45]=t()),a(i,{type:"info",class:"jlObjectType jlType",text:"Type"})]),e[47]||(e[47]=o('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">RegularTimeSeries{T, N, B}</span></span></code></pre></div><p>A type alias for a regularly sampled time series.</p>',2)),a(i,{type:"info",class:"source-link",text:"source"},{default:l(()=>[...e[46]||(e[46]=[s("a",{href:"https://github.com/brendanjohnharris/TimeseriesTools.jl/blob/c37b9039661ee9978e8d75e75d7890021ba7f00a/src/Types.jl#L192-L196",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),s("details",E,[s("summary",null,[e[48]||(e[48]=s("a",{id:"TimeseriesTools.SpikeTrain",href:"#TimeseriesTools.SpikeTrain"},[s("span",{class:"jlbinding"},"TimeseriesTools.SpikeTrain")],-1)),e[49]||(e[49]=t()),a(i,{type:"info",class:"jlObjectType jlType",text:"Type"})]),e[51]||(e[51]=o('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">SpikeTrain</span></span></code></pre></div><p>A type alias for a spike-train time series, which contains spike times in the time dimension and <code>true</code> for all values corresponding to a spike. The spike times can be retrieved with <code>times(x)</code>.</p>',2)),a(i,{type:"info",class:"source-link",text:"source"},{default:l(()=>[...e[50]||(e[50]=[s("a",{href:"https://github.com/brendanjohnharris/TimeseriesTools.jl/blob/c37b9039661ee9978e8d75e75d7890021ba7f00a/src/Types.jl#L252-L256",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),s("details",A,[s("summary",null,[e[52]||(e[52]=s("a",{id:"TimeseriesTools.TDim",href:"#TimeseriesTools.TDim"},[s("span",{class:"jlbinding"},"TimeseriesTools.TDim")],-1)),e[53]||(e[53]=t()),a(i,{type:"info",class:"jlObjectType jlType",text:"Type"})]),e[55]||(e[55]=o('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">TDim{S, T}</span></span></code></pre></div><p>The TimeseriesTools version of <code>DimensionalData.Dim</code> (custom dimensions named with a symbol)</p><p><strong>Examples</strong></p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span></span></span></code></pre></div><p><strong>See also</strong></p><ul><li><p><a href="/TimeseriesTools.jl/dev/TimeseriesTools/types#TimeseriesTools.ToolsDim"><code>ToolsDim</code></a></p></li><li><p><a href="/TimeseriesTools.jl/dev/TimeseriesTools/types#TimeseriesTools.ToolsDimension"><code>ToolsDimension</code></a></p></li></ul>',6)),a(i,{type:"info",class:"source-link",text:"source"},{default:l(()=>[...e[54]||(e[54]=[s("a",{href:"https://github.com/brendanjohnharris/TimeseriesTools.jl/blob/c37b9039661ee9978e8d75e75d7890021ba7f00a/src/Types.jl#L105-L116",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),s("details",D,[s("summary",null,[e[56]||(e[56]=s("a",{id:"TimeseriesTools.TimeIndex",href:"#TimeseriesTools.TimeIndex"},[s("span",{class:"jlbinding"},"TimeseriesTools.TimeIndex")],-1)),e[57]||(e[57]=t()),a(i,{type:"info",class:"jlObjectType jlType",text:"Type"})]),e[59]||(e[59]=o('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">TimeIndex</span></span></code></pre></div><p>A type alias for a tuple containing a time dimension and any number of other dimensions.</p>',2)),a(i,{type:"info",class:"source-link",text:"source"},{default:l(()=>[...e[58]||(e[58]=[s("a",{href:"https://github.com/brendanjohnharris/TimeseriesTools.jl/blob/c37b9039661ee9978e8d75e75d7890021ba7f00a/src/Types.jl#L141-L145",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),s("details",x,[s("summary",null,[e[60]||(e[60]=s("a",{id:"TimeseriesTools.ToolsDim",href:"#TimeseriesTools.ToolsDim"},[s("span",{class:"jlbinding"},"TimeseriesTools.ToolsDim")],-1)),e[61]||(e[61]=t()),a(i,{type:"info",class:"jlObjectType jlType",text:"Type"})]),e[63]||(e[63]=o('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ToolsDim{T}</span></span></code></pre></div><p>An abstract type for custom macro-defined dimensions in <code>TimeseriesTools</code>. Analogous to <code>DimensionalData.Dimension</code> for the purposes of <code>DimensionalData.@dim</code>.</p><p><strong>Examples</strong></p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>DimensionalData.@dim MyDim ToolsDim &quot;My dimension&quot; # Defines a new `ToolsDim &lt;: ToolsDimension`</span></span></code></pre></div><p><strong>See also</strong></p><ul><li><p><a href="/TimeseriesTools.jl/dev/TimeseriesTools/types#TimeseriesTools.ToolsDimension"><code>ToolsDimension</code></a></p></li><li><p><a href="/TimeseriesTools.jl/dev/TimeseriesTools/types#TimeseriesTools.TDim"><code>TDim</code></a></p></li></ul>',6)),a(i,{type:"info",class:"source-link",text:"source"},{default:l(()=>[...e[62]||(e[62]=[s("a",{href:"https://github.com/brendanjohnharris/TimeseriesTools.jl/blob/c37b9039661ee9978e8d75e75d7890021ba7f00a/src/Types.jl#L71-L84",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),s("details",S,[s("summary",null,[e[64]||(e[64]=s("a",{id:"TimeseriesTools.UnivariateTimeSeries",href:"#TimeseriesTools.UnivariateTimeSeries"},[s("span",{class:"jlbinding"},"TimeseriesTools.UnivariateTimeSeries")],-1)),e[65]||(e[65]=t()),a(i,{type:"info",class:"jlObjectType jlType",text:"Type"})]),e[67]||(e[67]=o('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">UnivariateTimeSeries{T}</span></span></code></pre></div><p>A type alias for a time series with one variable (a vector with only a <code>Ti</code> dimension).</p>',2)),a(i,{type:"info",class:"source-link",text:"source"},{default:l(()=>[...e[66]||(e[66]=[s("a",{href:"https://github.com/brendanjohnharris/TimeseriesTools.jl/blob/c37b9039661ee9978e8d75e75d7890021ba7f00a/src/Types.jl#L156-L160",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),s("details",C,[s("summary",null,[e[68]||(e[68]=s("a",{id:"TimeseriesTools.Var",href:"#TimeseriesTools.Var"},[s("span",{class:"jlbinding"},"TimeseriesTools.Var")],-1)),e[69]||(e[69]=t()),a(i,{type:"info",class:"jlObjectType jlType",text:"Type"})]),e[71]||(e[71]=o('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Var</span></span></code></pre></div><p>A DimensionalData.jl dimension representing the variables of a multivariate time series.</p>',2)),a(i,{type:"info",class:"source-link",text:"source"},{default:l(()=>[...e[70]||(e[70]=[s("a",{href:"https://github.com/brendanjohnharris/TimeseriesTools.jl/blob/c37b9039661ee9978e8d75e75d7890021ba7f00a/src/Types.jl#L170-L174",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),s("details",I,[s("summary",null,[e[72]||(e[72]=s("a",{id:"TimeseriesTools.TimeSeries-Tuple{Any, Any}",href:"#TimeseriesTools.TimeSeries-Tuple{Any, Any}"},[s("span",{class:"jlbinding"},"TimeseriesTools.TimeSeries")],-1)),e[73]||(e[73]=t()),a(i,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[75]||(e[75]=o(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">TimeSeries</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(t, x)</span></span></code></pre></div><p>Constructs a univariate time series with time <code>t</code> and data <code>x</code>. Alteratively, use <code>TS(t, x)</code></p><p><strong>Examples</strong></p><div class="language-@example vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">@example</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line highlighted"><span>julia&gt; using TimeseriesTools, Unitful;</span></span>
<span class="line"><span>julia&gt; t = 1:100</span></span>
<span class="line"><span>julia&gt; x = rand(100)</span></span>
<span class="line"><span>julia&gt; ts = TimeSeries(t, x)</span></span>
<span class="line"><span>julia&gt; ts isa typeintersect(UnivariateTimeSeries, RegularTimeSeries)</span></span></code></pre></div>`,4)),a(i,{type:"info",class:"source-link",text:"source"},{default:l(()=>[...e[74]||(e[74]=[s("a",{href:"https://github.com/brendanjohnharris/TimeseriesTools.jl/blob/c37b9039661ee9978e8d75e75d7890021ba7f00a/src/Types.jl#L274-L287",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),s("details",V,[s("summary",null,[e[76]||(e[76]=s("a",{id:"TimeseriesTools.TimeSeries-Tuple{Any, Function}",href:"#TimeseriesTools.TimeSeries-Tuple{Any, Function}"},[s("span",{class:"jlbinding"},"TimeseriesTools.TimeSeries")],-1)),e[77]||(e[77]=t()),a(i,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[79]||(e[79]=o('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">TimeSeries</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(t, f</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Construct a time series by mapping a function <code>f</code> over the time points <code>t</code>.</p>',2)),a(i,{type:"info",class:"source-link",text:"source"},{default:l(()=>[...e[78]||(e[78]=[s("a",{href:"https://github.com/brendanjohnharris/TimeseriesTools.jl/blob/c37b9039661ee9978e8d75e75d7890021ba7f00a/src/Types.jl#L340-L344",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),s("details",P,[s("summary",null,[e[80]||(e[80]=s("a",{id:"TimeseriesTools.TimeSeries-Tuple{DimensionalData.Dimensions.TimeDim, DimensionalData.Dimensions.Dimension, Any}",href:"#TimeseriesTools.TimeSeries-Tuple{DimensionalData.Dimensions.TimeDim, DimensionalData.Dimensions.Dimension, Any}"},[s("span",{class:"jlbinding"},"TimeseriesTools.TimeSeries")],-1)),e[81]||(e[81]=t()),a(i,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[83]||(e[83]=o(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">TimeSeries</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(t, v, x)</span></span></code></pre></div><p>Constructs a multivariate time series with time t, variable v, and data x.</p><p><strong>Examples</strong></p><div class="language-@example vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">@example</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line highlighted"><span>julia&gt; t = 1:100;</span></span>
<span class="line"><span>julia&gt; v = [:a, :b, :c];</span></span>
<span class="line"><span>julia&gt; x = rand(100, 3);</span></span>
<span class="line"><span>julia&gt; mts = TimeSeries(t, v, x)</span></span>
<span class="line"><span>julia&gt; mts isa typeintersect(MultivariateTimeSeries, RegularTimeSeries)</span></span></code></pre></div>`,4)),a(i,{type:"info",class:"source-link",text:"source"},{default:l(()=>[...e[82]||(e[82]=[s("a",{href:"https://github.com/brendanjohnharris/TimeseriesTools.jl/blob/c37b9039661ee9978e8d75e75d7890021ba7f00a/src/Types.jl#L291-L304",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})])])}const q=n(T,[["render",L]]);export{M as __pageData,q as default};
